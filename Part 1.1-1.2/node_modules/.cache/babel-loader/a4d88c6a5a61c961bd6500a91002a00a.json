{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/victorli/WebstormProjects/FullStackOpen/Part 1.1-1.2/src/App.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nconst course = 'Half Stack application development';\nconst part1 = 'I don\\'t even remember';\nconst exercises1 = 10;\nconst part2 = 'Using props to pass data';\nconst exercises2 = 7;\nconst part3 = 'State of a component';\nconst exercises3 = 14;\n/*\nWe want to refactor this code in a manner that uses Components and Properties\nThe Content Component should be rendered to 3 \"Part\" components\n\nCreate an array with three seperate dictionaries to contain all the necessary information and use it to create our\ncomponents\n */\n// Three New that are separated from one another Components \"Header\", \"Content\", and \"Total\"\n\nconst Header = props => {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: props.course.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Header;\n\nconst Content = props => {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [part1, \" \", exercises1, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 33\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 38\n    }, this), part2, \" \", exercises2, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 33\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 38\n    }, this), part3, \" \", exercises3]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = Content;\n\nconst Total = props => {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Number of exercises \", exercises1 + exercises2 + exercises3]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_c3 = Total;\n\nconst App = () => {\n  // Create a dictionary that contains an array that separates its own dictionaries\n  const course = {\n    name: \"Half Stack application development\",\n    parts: [{\n      name: 'Fundamentals of React',\n      exercises: 10\n    }, {\n      name: 'Using props to pass data',\n      exercises: 7\n    }, {\n      name: 'State of a component',\n      exercises: 14\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      course: course\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Content, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Total, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n\n_c4 = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 75,\n  columnNumber: 17\n}, this), document.getElementById('root'));\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Content\");\n$RefreshReg$(_c3, \"Total\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["/Users/victorli/WebstormProjects/FullStackOpen/Part 1.1-1.2/src/App.js"],"names":["React","ReactDOM","course","part1","exercises1","part2","exercises2","part3","exercises3","Header","props","name","Content","Total","App","parts","exercises","render","document","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,MAAMC,MAAM,GAAG,oCAAf;AACA,MAAMC,KAAK,GAAG,wBAAd;AACA,MAAMC,UAAU,GAAG,EAAnB;AACA,MAAMC,KAAK,GAAG,0BAAd;AACA,MAAMC,UAAU,GAAG,CAAnB;AACA,MAAMC,KAAK,GAAG,sBAAd;AACA,MAAMC,UAAU,GAAG,EAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;AACA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACtB,sBACA;AAAA,cAAKA,KAAK,CAACR,MAAN,CAAaS;AAAlB;AAAA;AAAA;AAAA;AAAA,UADA;AAGH,CAJD;;KAAMF,M;;AAMN,MAAMG,OAAO,GAAIF,KAAD,IAAW;AACvB,sBACI;AAAA,eACKP,KADL,OACaC,UADb,eACwB;AAAA;AAAA;AAAA;AAAA,YADxB,eAC6B;AAAA;AAAA;AAAA;AAAA,YAD7B,EAEKC,KAFL,OAEaC,UAFb,eAEwB;AAAA;AAAA;AAAA;AAAA,YAFxB,eAE6B;AAAA;AAAA;AAAA;AAAA,YAF7B,EAGKC,KAHL,OAGaC,UAHb;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CARD;;MAAMI,O;;AAUN,MAAMC,KAAK,GAAIH,KAAD,IAAW;AACrB,sBACI;AAAA,uCAAwBN,UAAU,GAAGE,UAAb,GAA0BE,UAAlD;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CAJD;;MAAMK,K;;AAKN,MAAMC,GAAG,GAAG,MAAM;AAEd;AACJ,QAAMZ,MAAM,GAAG;AACXS,IAAAA,IAAI,EAAE,oCADK;AAEXI,IAAAA,KAAK,EAAE,CACH;AACIJ,MAAAA,IAAI,EAAE,uBADV;AAEIK,MAAAA,SAAS,EAAE;AAFf,KADG,EAKH;AACIL,MAAAA,IAAI,EAAE,0BADV;AAEIK,MAAAA,SAAS,EAAE;AAFf,KALG,EASH;AACIL,MAAAA,IAAI,EAAE,sBADV;AAEIK,MAAAA,SAAS,EAAE;AAFf,KATG;AAFI,GAAf;AAmBI,sBACI;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAEd;AAAhB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CA9BD;;MAAMY,G;AAgCNb,QAAQ,CAACgB,MAAT,eAAgB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB;AAEA,eAAeL,GAAf","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\n\nconst course = 'Half Stack application development'\nconst part1 = 'I don\\'t even remember'\nconst exercises1 = 10\nconst part2 = 'Using props to pass data'\nconst exercises2 = 7\nconst part3 = 'State of a component'\nconst exercises3 = 14\n\n/*\nWe want to refactor this code in a manner that uses Components and Properties\nThe Content Component should be rendered to 3 \"Part\" components\n\nCreate an array with three seperate dictionaries to contain all the necessary information and use it to create our\ncomponents\n */\n\n\n// Three New that are separated from one another Components \"Header\", \"Content\", and \"Total\"\nconst Header = (props) => {\n    return(\n    <h1>{props.course.name}</h1>\n    )\n}\n\nconst Content = (props) => {\n    return(\n        <p>\n            {part1} {exercises1}<br/><br/>\n            {part2} {exercises2}<br/><br/>\n            {part3} {exercises3}\n        </p>\n)\n}\n\nconst Total = (props) => {\n    return(\n        <p>Number of exercises {exercises1 + exercises2 + exercises3}</p>\n    )\n}\nconst App = () => {\n\n    // Create a dictionary that contains an array that separates its own dictionaries\nconst course = {\n    name: \"Half Stack application development\",\n    parts: [\n        {\n            name: 'Fundamentals of React',\n            exercises: 10\n        },\n        {\n            name: 'Using props to pass data',\n            exercises: 7\n        },\n        {\n            name: 'State of a component',\n            exercises: 14\n        }\n\n    ]\n}\n\n    return (\n        <div>\n            <Header course={course} />\n            <Content/>\n            <Total/>\n\n        </div>\n    )\n}\n\nReactDOM.render(<App />, document.getElementById('root'))\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}